[
  {
    "description": "   To verify the functionality of the Groceries API,\n   Including Token Generation, Product Management, Cart, and Order Operations.",
    "elements": [
      {
        "description": "",
        "id": "groceries-api-test-suite;check-if-the-server-is-up-and-running-via-api",
        "keyword": "Scenario",
        "line": 9,
        "name": "Check if the server is up and running via API",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1589400
=======
              "duration": 2426799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 8563500
=======
              "duration": 5968200
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "I send a GET request to the endpoint \"/status\".",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:18"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1294904499
=======
              "duration": 4642856900
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 11,
            "name": "The response status code should be 200.",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:31"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4658199
=======
              "duration": 8995200
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 12,
            "name": "The response body should have \"status\" as \"UP\".",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:36"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 9689799
=======
              "duration": 11986600
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 418799
=======
              "duration": 543800
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;validate-the-access-token-generation-api-functionality",
        "keyword": "Scenario",
        "line": 14,
        "name": "Validate the Access token Generation API functionality",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1544199
=======
              "duration": 1850400
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1170299
=======
              "duration": 2210900
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 15,
            "name": "I create a token for client \"TestClient\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:43"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4375700
=======
              "duration": 5887200
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 16,
            "name": "I send a POST request to \"/api-clients\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:79"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 785886600
=======
              "duration": 973237300
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "I should receive a 201 status code",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:47"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3421399
=======
              "duration": 2199799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "The response should contain \"accessToken\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:51"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4951300
=======
              "duration": 5389199
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 215800
=======
              "duration": 257899
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;verify-the-api-functionaliy-to-fetch-a-specific-products-by-id",
        "keyword": "Scenario",
        "line": 20,
        "name": "Verify the API functionaliy to fetch a specific products by ID",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 2129699
=======
              "duration": 1757599
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1144099
=======
              "duration": 1052799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "I send a GET request to the endpoint \"/products/4643\".",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:18"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 492419500
=======
              "duration": 363805800
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "The response status code should be 200.",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:31"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1558300
=======
              "duration": 2305000
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "The Featch Api response body should have 4643.",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:58"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 2621299
=======
              "duration": 2505000
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 126899
=======
              "duration": 100900
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;validate-the-api-functionality-to-fetch-the-complete-list-of-products.",
        "keyword": "Scenario",
        "line": 25,
        "name": "Validate the API functionality to fetch the complete list of products.",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3224899
=======
              "duration": 3193000
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1744999
=======
              "duration": 2059999
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 26,
            "name": "The Featch All Product API endpoint is \"/products\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:64"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4664499
=======
              "duration": 2450900
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 27,
            "name": "I send a GET request to the Featching All produtcts",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:69"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 340820699
=======
              "duration": 318603299
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 28,
            "name": "The response status code should be 200.",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:31"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 2147600
=======
              "duration": 2207300
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "The response body should contain a list of products.",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:73"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3247299
=======
              "duration": 3372199
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 309199
=======
              "duration": 147100
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;access-token-generation-with-missing-or-invalid-client-name",
        "keyword": "Scenario",
        "line": 31,
        "name": "Access Token Generation with Missing or Invalid Client Name",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1749299
=======
              "duration": 1292900
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 984000
=======
              "duration": 1761500
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 32,
            "name": "I create a token for client \" \"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:43"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 713800
=======
              "duration": 1142100
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 33,
            "name": "I send a POST request to \"/api-clients\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:79"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 444175999
=======
              "duration": 327462400
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 34,
            "name": "I should receive a 400 Bad Request status code",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:88"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3117900
=======
              "duration": 4017799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 35,
            "name": "The response body should contain an error message indicating \"Invalid or missing client name.\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:92"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 5753299
=======
              "duration": 5353399
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 196600
=======
              "duration": 222200
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;fetching-product-by-nonexistent-id",
        "keyword": "Scenario",
        "line": 37,
        "name": "Fetching Product by Nonexistent ID",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1629600
=======
              "duration": 911200
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 851999
=======
              "duration": 715500
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 38,
            "name": "I send a GET request to the NonExist Product ID endpoint \"/products/9999999\"",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:98"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 331583799
=======
              "duration": 362956899
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 39,
            "name": "The response status code should be 404 Not Found",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:107"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3908400
=======
              "duration": 1961100
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 40,
            "name": "The response body should contain an error message indicating \"No product with id 9999999.\" with NonExistentId Request",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:111"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 7211299
=======
              "duration": 5481899
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 512199
=======
              "duration": 166900
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "groceries-api-test-suite;fetching-product-with-invalid-id-format",
        "keyword": "Scenario",
        "line": 42,
        "name": "Fetching Product with Invalid ID Format",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1770400
=======
              "duration": 1697600
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "The Grocery baseURL is initialized",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:13"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 798499
=======
              "duration": 1373600
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 43,
            "name": "I send a GET request to the endpoint \"/products/abc123\".",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:18"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 360153499
=======
              "duration": 336291100
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 44,
            "name": "The response status code should be 400 Bad Request",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:117"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3686900
=======
              "duration": 3429099
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 45,
            "name": "The response body should contain an error message indicating \"The product id must be a number.\" with Invalid ID",
            "match": {
              "location": "tests\\step-definitions\\api-steps\\grocery-apis.step.js:121"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 5889499
=======
              "duration": 4570400
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 167800
=======
              "duration": 192900
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@api",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "groceries-api-test-suite",
    "line": 2,
    "keyword": "Feature",
    "name": "Groceries API Test Suite",
    "tags": [
      {
        "name": "@sanity",
        "line": 1
      },
      {
        "name": "@api",
        "line": 1
      }
    ],
    "uri": "tests\\features\\api\\grocery-apis.feature"
  },
  {
    "description": "  As a user of the Polestar website\n  I want to apply filters to new vehicle offers\n  So that I can verify the filter functionality works correctly and display accurate results",
    "elements": [
      {
        "description": "",
        "id": "verify-filter-functionality-for-polestar-offers;verify-filters-for-polestar-polestar-3-(2025-model)-with-long-range-dual-motor-options",
        "keyword": "Scenario Outline",
        "line": 21,
        "name": "Verify filters for Polestar Polestar 3 (2025 Model) with Long range Dual motor options",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 883073500
=======
              "duration": 1133132800
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "I navigate to the Homepage",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:9"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 2667147100
=======
              "duration": 6579305300
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "I accept cookies and click on the \"View Offers\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:17"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3163293599
=======
              "duration": 4999318299
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "I navigate to the \"New Vehicle Offers\" and Clicked on \"Filter\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:23"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1177590700
=======
              "duration": 1319225600
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 13,
            "name": "I click on the \"Car\" filter and select the checkbox for \"Polestar 3\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4532491300
=======
              "duration": 4594866300
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "I click on the \"Model year\" filter and select the checkbox for \"2025\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3683144199
=======
              "duration": 3824148799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I click on the \"Powertrain\" filter and select the checkbox for \"Long range Dual motor\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3734432199
=======
              "duration": 3723914399
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "I click the \"View\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:34"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 205141999
=======
              "duration": 167323199
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "the results should match the filter criteria \"Polestar 3\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:40"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 66920999
=======
              "duration": 48586699
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 616517500
=======
              "duration": 136691700
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@web",
            "line": 1
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "verify-filter-functionality-for-polestar-offers;verify-filters-for-polestar-polestar-2-(2025-model)-with-long-range-dual-motor-options",
        "keyword": "Scenario Outline",
        "line": 22,
        "name": "Verify filters for Polestar Polestar 2 (2025 Model) with Long range Dual motor options",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 900810199
=======
              "duration": 631830200
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "I navigate to the Homepage",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:9"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 2097260699
=======
              "duration": 3827512300
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "I accept cookies and click on the \"View Offers\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:17"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3370917000
=======
              "duration": 3737869399
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "I navigate to the \"New Vehicle Offers\" and Clicked on \"Filter\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:23"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 1196363899
=======
              "duration": 1239310400
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 13,
            "name": "I click on the \"Car\" filter and select the checkbox for \"Polestar 2\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 4671541700
=======
              "duration": 4963805199
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "I click on the \"Model year\" filter and select the checkbox for \"2025\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3693691600
=======
              "duration": 3708935799
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I click on the \"Powertrain\" filter and select the checkbox for \"Long range Dual motor\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:29"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 3673802499
=======
              "duration": 3575985800
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "I click the \"View\" button",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:34"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 293083400
=======
              "duration": 163739199
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "the results should match the filter criteria \"Polestar 2 Long range Dual\"",
            "match": {
              "location": "tests\\step-definitions\\web-steps\\new-cars-filter.steps.js:40"
            },
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 33658799
=======
              "duration": 35478800
>>>>>>> d726bf9 (PR Check)
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
<<<<<<< HEAD
              "duration": 563878700
=======
              "duration": 132192000
>>>>>>> d726bf9 (PR Check)
            }
          }
        ],
        "tags": [
          {
            "name": "@sanity",
            "line": 1
          },
          {
            "name": "@web",
            "line": 1
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "verify-filter-functionality-for-polestar-offers",
    "line": 2,
    "keyword": "Feature",
    "name": "Verify Filter Functionality for Polestar Offers",
    "tags": [
      {
        "name": "@sanity",
        "line": 1
      },
      {
        "name": "@web",
        "line": 1
      }
    ],
    "uri": "tests\\features\\web\\new-cars-filter.feature"
  }
]